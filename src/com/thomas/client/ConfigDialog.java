/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thomas.client;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import javax.swing.JComboBox;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;

import com.thomas.data.ConstantValue;
//import com.thomas.logic.YaShuoJni;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelFuture;

/**
 *
 * @author LongJing
 */
public class ConfigDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 109373871619769381L;
	private ClientFrame parent;
	public String 自选花牌 = "";
	public String 自选财神 = "";
	public static String 启动状态 = "未启动";
//	public YaShuoJni yaShuoJni = new YaShuoJni();
    /**
     * Creates new form ConfigDialog
     * @param modal 
     * @param parent 
     */
	public ConfigDialog(ClientFrame parent, boolean modal) {
		super(parent, modal);
		this.parent = parent;
		initComponents();
		setLocationRelativeTo(null);
		initData();
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox44 = new javax.swing.JCheckBox();
        jCheckBox45 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox29 = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jCheckBox30 = new javax.swing.JCheckBox();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jComboBox9 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jCheckBox34 = new javax.swing.JCheckBox();
        jCheckBox35 = new javax.swing.JCheckBox();
        jCheckBox36 = new javax.swing.JCheckBox();
        jComboBox11 = new javax.swing.JComboBox<>();
        jCheckBox37 = new javax.swing.JCheckBox();
        jCheckBox38 = new javax.swing.JCheckBox();
        jCheckBox39 = new javax.swing.JCheckBox();
        jCheckBox40 = new javax.swing.JCheckBox();
        jCheckBox41 = new javax.swing.JCheckBox();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox43 = new javax.swing.JCheckBox();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("配置");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setMinimumSize(new java.awt.Dimension(800, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 50));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("启动状态:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        jLabel3.setText(启动状态);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel3, gridBagConstraints);

        jButton1.setText("启动");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jButton1, gridBagConstraints);

        jButton4.setText("停止");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jButton4, gridBagConstraints);

        jCheckBox44.setText("开启震动");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jCheckBox44, gridBagConstraints);

        jCheckBox45.setText("开启语音");
        jCheckBox45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox45ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jCheckBox45, gridBagConstraints);

        jLabel4.setText("音量:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel4, gridBagConstraints);

        jSlider1.setPreferredSize(new java.awt.Dimension(100, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jSlider1, gridBagConstraints);

        jLabel5.setText("剩余时间:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setText(ClientHandler.time);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jLabel6, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setMinimumSize(new java.awt.Dimension(800, 550));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 550));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(400, 550));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 550));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("码牌"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("选牌");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel1, gridBagConstraints);

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "152", "148", "144", "142", "140", "138", "136", "132", "128", "126", "124", "120", "116", "112", "110", "108", "104", "102", "100", "96", "84" }));
        jComboBox12.setSelectedIndex(6);
        jComboBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jComboBox12, gridBagConstraints);

        jLabel8.setText("东");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel8, gridBagConstraints);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(17, 10, 19, 1));
        jSpinner1.setEnabled(false);
        jSpinner1.setMinimumSize(new java.awt.Dimension(45, 24));
        jSpinner1.setPreferredSize(new java.awt.Dimension(45, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel5.add(jSpinner1, gridBagConstraints);

        jLabel9.setText("南");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel9, gridBagConstraints);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(17, 10, 19, 1));
        jSpinner2.setEnabled(false);
        jSpinner2.setMinimumSize(new java.awt.Dimension(45, 24));
        jSpinner2.setPreferredSize(new java.awt.Dimension(45, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel5.add(jSpinner2, gridBagConstraints);

        jLabel10.setText("西");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel10, gridBagConstraints);

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(17, 10, 19, 1));
        jSpinner3.setEnabled(false);
        jSpinner3.setMinimumSize(new java.awt.Dimension(45, 24));
        jSpinner3.setPreferredSize(new java.awt.Dimension(45, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel5.add(jSpinner3, gridBagConstraints);

        jLabel11.setText("北");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jLabel11, gridBagConstraints);

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(17, 10, 19, 1));
        jSpinner4.setEnabled(false);
        jSpinner4.setMinimumSize(new java.awt.Dimension(45, 24));
        jSpinner4.setPreferredSize(new java.awt.Dimension(45, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jSpinner4, gridBagConstraints);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("两层");
        jRadioButton1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel5.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("三层");
        jRadioButton2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel5.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel3.add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("启牌"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("玩家牌数");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jLabel12, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "7", "10", "13", "16", "19" }));
        jComboBox1.setSelectedIndex(3);
        jComboBox1.setEnabled(false);
        jComboBox1.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox1.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel6.add(jComboBox1, gridBagConstraints);

        jLabel13.setText("玩家人数");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jLabel13, gridBagConstraints);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4" }));
        jComboBox2.setSelectedIndex(2);
        jComboBox2.setEnabled(false);
        jComboBox2.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox2.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jComboBox2, gridBagConstraints);

        jLabel14.setText("每手张数");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel6.add(jLabel14, gridBagConstraints);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "4", "6", "8", "12" }));
        jComboBox3.setSelectedIndex(1);
        jComboBox3.setEnabled(false);
        jComboBox3.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox3.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 20);
        jPanel6.add(jComboBox3, gridBagConstraints);

        jLabel15.setText("挑牌");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel6.add(jLabel15, gridBagConstraints);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "平挑", "隔挑", "竖挑" }));
        jComboBox4.setSelectedIndex(1);
        jComboBox4.setEnabled(false);
        jComboBox4.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox4.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel6.add(jComboBox4, gridBagConstraints);

        jLabel16.setText("换手牌");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jLabel16, gridBagConstraints);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));
        jComboBox5.setEnabled(false);
        jComboBox5.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox5.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel6.add(jComboBox5, gridBagConstraints);

        jLabel17.setText("预测牌");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jLabel17, gridBagConstraints);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));
        jComboBox6.setSelectedIndex(9);
        jComboBox6.setMinimumSize(new java.awt.Dimension(80, 24));
        jComboBox6.setPreferredSize(new java.awt.Dimension(80, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel6.add(jComboBox6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel3.add(jPanel6, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("摸牌"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jCheckBox1.setText("两墩拿牌");
        jPanel7.add(jCheckBox1, new java.awt.GridBagConstraints());

        jCheckBox2.setText("逐层拿牌");
        jCheckBox2.setEnabled(false);
        jPanel7.add(jCheckBox2, new java.awt.GridBagConstraints());

        jCheckBox3.setText("换层后反向拿牌");
        jCheckBox3.setEnabled(false);
        jPanel7.add(jCheckBox3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel3.add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("吃碰"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jCheckBox4.setText("碰牌");
        jCheckBox4.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox4, gridBagConstraints);

        jCheckBox5.setText("字牌碰");
        jCheckBox5.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox5, gridBagConstraints);

        jCheckBox6.setText("吃牌");
        jCheckBox6.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox6, gridBagConstraints);

        jCheckBox7.setText("字牌吃");
        jCheckBox7.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox7, gridBagConstraints);

        jCheckBox8.setText("字牌分开");
        jCheckBox8.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox8, gridBagConstraints);

        jCheckBox9.setText("吃三方牌");
        jCheckBox9.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox9, gridBagConstraints);

        jCheckBox10.setText("补将");
        jCheckBox10.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox10, gridBagConstraints);

        jCheckBox11.setText("花牌可碰");
        jCheckBox11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel8.add(jCheckBox11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel3.add(jPanel8, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("胡牌"));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jCheckBox12.setText("只自摸");
        jCheckBox12.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox12, gridBagConstraints);

        jCheckBox13.setText("抢杠胡");
        jCheckBox13.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox13, gridBagConstraints);

        jCheckBox14.setText("血流成河");
        jCheckBox14.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox14, gridBagConstraints);

        jCheckBox15.setText("二五八将");
        jCheckBox15.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox15, gridBagConstraints);

        jCheckBox16.setText("缺一门");
        jCheckBox16.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox16, gridBagConstraints);

        jCheckBox17.setText("七小对");
        jCheckBox17.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox17, gridBagConstraints);

        jCheckBox18.setText("十三烂");
        jCheckBox18.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox18, gridBagConstraints);

        jCheckBox19.setText("幺九牌");
        jCheckBox19.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox19, gridBagConstraints);

        jCheckBox20.setText("开口胡");
        jCheckBox20.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox20, gridBagConstraints);

        jCheckBox21.setText("血战到底");
        jCheckBox21.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox21, gridBagConstraints);

        jCheckBox22.setText("胡牌可碰");
        jCheckBox22.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel9.add(jCheckBox22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel3.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel4.setMinimumSize(new java.awt.Dimension(400, 550));
        jPanel4.setPreferredSize(new java.awt.Dimension(400, 550));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("花牌"));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("杠花");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel10.add(jLabel18, gridBagConstraints);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "顺杠牌", "后杠牌", "随意杠" }));
        jComboBox7.setSelectedIndex(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel10.add(jComboBox7, gridBagConstraints);

        jButton2.setText("自选花牌");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel10.add(jButton2, gridBagConstraints);

        jCheckBox23.setText("单张可杠");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel10.add(jCheckBox23, gridBagConstraints);

        jCheckBox24.setText("杠手中牌(以花牌形式杠)");
        jCheckBox24.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel10.add(jCheckBox24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel4.add(jPanel10, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("杠牌"));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel19.setText("杠牌顺序");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jLabel19, gridBagConstraints);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "顺杠牌", "后杠牌", "随意杠" }));
        jComboBox8.setSelectedIndex(1);
        jComboBox8.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jComboBox8, gridBagConstraints);

        jCheckBox25.setText("明杠");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jCheckBox25, gridBagConstraints);

        jCheckBox26.setText("暗杠");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jCheckBox26, gridBagConstraints);

        jCheckBox27.setText("字牌可杠");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jCheckBox27, gridBagConstraints);

        jCheckBox28.setText("东南西北杠");
        jCheckBox28.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jCheckBox28, gridBagConstraints);

        jCheckBox29.setText("幺九杠(三张不补，四张补)");
        jCheckBox29.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel11.add(jCheckBox29, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel4.add(jPanel11, gridBagConstraints);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jCheckBox30.setSelected(true);
        jCheckBox30.setText("财神");
        jCheckBox30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jCheckBox30, gridBagConstraints);

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText("顺摸财神");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jRadioButton3, gridBagConstraints);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("后财神");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jRadioButton4, gridBagConstraints);

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("色子定财神");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jRadioButton5, gridBagConstraints);

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setText("固定财神");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jRadioButton6, gridBagConstraints);

        jButton3.setText("固定财神");
        jButton3.setEnabled(false);
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jButton3, gridBagConstraints);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "上", "下" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel12.add(jComboBox9, gridBagConstraints);

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "下下", "上上", "上下", "一上", "一下" }));
        jComboBox10.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel12.add(jComboBox10, gridBagConstraints);

        jCheckBox34.setText("财神是花牌继续升");
        jCheckBox34.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel12.add(jCheckBox34, gridBagConstraints);

        jCheckBox35.setText("财神按正常牌参与吃碰杠(起飞)");
        jCheckBox35.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        jPanel12.add(jCheckBox35, gridBagConstraints);

        jCheckBox36.setText("交换牌");
        jCheckBox36.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel12.add(jCheckBox36, gridBagConstraints);

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "倒数第1栋第1张", "倒数第2栋第1张", "倒数第3栋第1张", "倒数第4栋第1张", "倒数第5栋第1张", "倒数第6栋第1张", "倒数第7栋第1张", "倒数第8栋第1张", "倒数第9栋第1张", "倒数第10栋第1张" }));
        jComboBox11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        jPanel12.add(jComboBox11, gridBagConstraints);

        jCheckBox37.setText("先杠花后定财神");
        jCheckBox37.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel12.add(jCheckBox37, gridBagConstraints);

        jCheckBox38.setText("可升级财神到花牌");
        jCheckBox38.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        jPanel12.add(jCheckBox38, gridBagConstraints);

        jCheckBox39.setText("翻开财神是花牌继续翻");
        jCheckBox39.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel12.add(jCheckBox39, gridBagConstraints);

        jCheckBox40.setText("财神可单杠");
        jCheckBox40.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jPanel12.add(jCheckBox40, gridBagConstraints);

        jCheckBox41.setText("翻开的财神当花牌");
        jCheckBox41.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel12.add(jCheckBox41, gridBagConstraints);

        jCheckBox42.setText("财神置换");
        jCheckBox42.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanel12.add(jCheckBox42, gridBagConstraints);

        jCheckBox43.setText("财神可抓");
        jCheckBox43.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        jPanel12.add(jCheckBox43, gridBagConstraints);

        buttonGroup3.add(jRadioButton7);
        jRadioButton7.setSelected(true);
        jRadioButton7.setText("升级财神");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel12.add(jRadioButton7, gridBagConstraints);

        buttonGroup3.add(jRadioButton8);
        jRadioButton8.setText("双财神");
        jRadioButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel12.add(jRadioButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel4.add(jPanel12, gridBagConstraints);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel20.setText("A 坏牌：");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jLabel20, gridBagConstraints);

        jLabel21.setText("B 坏牌：");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel4.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jPanel4, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
				SelectDialog dialog = new SelectDialog(ConfigDialog.this, true, 1);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
				SelectDialog dialog = new SelectDialog(ConfigDialog.this, true, 2);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
		@SuppressWarnings("unchecked")
		JComboBox<String> button = (JComboBox<String>) evt.getSource();
		int index = button.getSelectedIndex();
		if (index == 0) {
			jSpinner1.setValue(19);
			jSpinner2.setValue(19);
			jSpinner3.setValue(19);
			jSpinner4.setValue(19);
		} else if (index == 1) {
			jSpinner1.setValue(18);
			jSpinner2.setValue(19);
			jSpinner3.setValue(18);
			jSpinner4.setValue(19);
		} else if (index == 2) {
			jSpinner1.setValue(18);
			jSpinner2.setValue(18);
			jSpinner3.setValue(18);
			jSpinner4.setValue(18);
		} else if (index == 3) {
			jSpinner1.setValue(18);
			jSpinner2.setValue(18);
			jSpinner3.setValue(18);
			jSpinner4.setValue(17);
		} else if (index == 4) {
			jSpinner1.setValue(17);
			jSpinner2.setValue(18);
			jSpinner3.setValue(17);
			jSpinner4.setValue(18);
		} else if (index == 5) {
			jSpinner1.setValue(17);
			jSpinner2.setValue(17);
			jSpinner3.setValue(17);
			jSpinner4.setValue(18);
		} else if (index == 6) {
			jSpinner1.setValue(17);
			jSpinner2.setValue(17);
			jSpinner3.setValue(17);
			jSpinner4.setValue(17);
		} else if (index == 7) {
			jSpinner1.setValue(16);
			jSpinner2.setValue(17);
			jSpinner3.setValue(16);
			jSpinner4.setValue(17);
		} else if (index == 8) {
			jSpinner1.setValue(16);
			jSpinner2.setValue(16);
			jSpinner3.setValue(16);
			jSpinner4.setValue(16);
		} else if (index == 9) {
			jSpinner1.setValue(16);
			jSpinner2.setValue(16);
			jSpinner3.setValue(16);
			jSpinner4.setValue(15);
		} else if (index == 10) {
			jSpinner1.setValue(15);
			jSpinner2.setValue(16);
			jSpinner3.setValue(15);
			jSpinner4.setValue(16);
		} else if (index == 11) {
			jSpinner1.setValue(15);
			jSpinner2.setValue(15);
			jSpinner3.setValue(15);
			jSpinner4.setValue(15);
		} else if (index == 12) {
			jSpinner1.setValue(14);
			jSpinner2.setValue(15);
			jSpinner3.setValue(14);
			jSpinner4.setValue(15);
		} else if (index == 13) {
			jSpinner1.setValue(14);
			jSpinner2.setValue(14);
			jSpinner3.setValue(14);
			jSpinner4.setValue(14);
		} else if (index == 14) {
			jSpinner1.setValue(14);
			jSpinner2.setValue(14);
			jSpinner3.setValue(14);
			jSpinner4.setValue(13);
		} else if (index == 15) {
			jSpinner1.setValue(13);
			jSpinner2.setValue(14);
			jSpinner3.setValue(13);
			jSpinner4.setValue(14);
		} else if (index == 16) {
			jSpinner1.setValue(13);
			jSpinner2.setValue(13);
			jSpinner3.setValue(13);
			jSpinner4.setValue(13);
		} else if (index == 17) {
			jSpinner1.setValue(13);
			jSpinner2.setValue(13);
			jSpinner3.setValue(13);
			jSpinner4.setValue(12);
		} else if (index == 18) {
			jSpinner1.setValue(12);
			jSpinner2.setValue(13);
			jSpinner3.setValue(12);
			jSpinner4.setValue(13);
		} else if (index == 19) {
			jSpinner1.setValue(12);
			jSpinner2.setValue(12);
			jSpinner3.setValue(12);
			jSpinner4.setValue(12);
		} else if (index == 20) {
			jSpinner1.setValue(10);
			jSpinner2.setValue(11);
			jSpinner3.setValue(10);
			jSpinner4.setValue(11);
		}
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		try {
			parent.onQueryCmd();
			// 测试牌状态的命令，在界面显示 测试
			if (parent.curcmdcode2 == ConstantValue.PLAYERCMD) {
				ChannelFuture cf = ClientMain.loginWin.getChannelFuture();
				ByteBuf cmdBuf2 = cf.channel().alloc().buffer();
				cmdBuf2.writeShort(ConstantValue.USERTYPE);
				cmdBuf2.writeShort(ConstantValue.WAKEUPCARD);
				cmdBuf2.writeShort(ConstantValue.NULLREC);
				cmdBuf2.writeBytes(ConstantValue.strUserName.getBytes());// 10 bytes
				cmdBuf2.writeInt(0xFBFEBFEF);

				cf.channel().writeAndFlush(cmdBuf2);
			}
			jLabel3.setText("已启动");
			启动状态 = "已启动";
		} catch (Exception e) {
			e.printStackTrace();
		}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		try {
			if (parent.curcmdcode2 == ConstantValue.PLAYERCMD) {
				ChannelFuture cf = ClientMain.loginWin.getChannelFuture();
				ByteBuf cmdBuf2 = cf.channel().alloc().buffer();
				cmdBuf2.writeShort(ConstantValue.USERTYPE);
				cmdBuf2.writeShort(ConstantValue.SLEEPCARD);
				cmdBuf2.writeShort(ConstantValue.NULLREC);
				cmdBuf2.writeBytes(ConstantValue.strUserName.getBytes());// 10 bytes
				cmdBuf2.writeInt(0xFBFEBFEF);

				cf.channel().writeAndFlush(cmdBuf2);
			}
			jLabel3.setText("未启动");
			启动状态 = "未启动";
		} catch (Exception e) {
			e.printStackTrace();
		}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
		if (jRadioButton6.isSelected()) {
			jButton3.setEnabled(true);
		} else {
			jButton3.setEnabled(false);
		}
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
    	if (jRadioButton3.isSelected()) {
			jButton3.setEnabled(false);
		}
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
    	if (jRadioButton4.isSelected()) {
			jButton3.setEnabled(false);
		}
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
    	if (jRadioButton5.isSelected()) {
			jButton3.setEnabled(false);
		}
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jCheckBox45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox45ActionPerformed
//		if (jCheckBox45.isSelected()) {
//			yaShuoJni.start();
//		} else {
//			yaShuoJni.stop();
//		}
    }//GEN-LAST:event_jCheckBox45ActionPerformed

    private void jCheckBox30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox30ActionPerformed
		if (jCheckBox30.isSelected()) {
			jRadioButton3.setEnabled(true);
			jRadioButton4.setEnabled(true);
			jRadioButton5.setEnabled(true);
			jRadioButton6.setEnabled(true);
			jRadioButton7.setEnabled(true);
			jRadioButton8.setEnabled(true);
		} else {
			jRadioButton3.setEnabled(false);
			jRadioButton4.setEnabled(false);
			jRadioButton5.setEnabled(false);
			jRadioButton6.setEnabled(false);
			jRadioButton7.setEnabled(false);
			jRadioButton8.setEnabled(false);
		}
    }//GEN-LAST:event_jCheckBox30ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
    	if (jRadioButton7.isSelected()) {
    		jComboBox9.setEnabled(true);
    		jComboBox10.setEnabled(false);
		}
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton8ActionPerformed
    	if (jRadioButton8.isSelected()) {
    		jComboBox9.setEnabled(false);
    		jComboBox10.setEnabled(true);
		}
    }//GEN-LAST:event_jRadioButton8ActionPerformed

	private void formWindowClosed(java.awt.event.WindowEvent evt) {
		if (jCheckBox44.isSelected()) {
			ClientMain.configMap.put("开启震动", "1");
		} else {
			ClientMain.configMap.put("开启震动", "0");
		}
		if (jCheckBox45.isSelected()) {
			ClientMain.configMap.put("开启语音", "1");
		} else {
			ClientMain.configMap.put("开启语音", "0");
		}
		if (jCheckBox1.isSelected()) {
			ClientMain.configMap.put("上下拿牌", "1");
		} else {
			ClientMain.configMap.put("上下拿牌", "0");
		}
		if (jCheckBox2.isSelected()) {
			ClientMain.configMap.put("逐层拿牌", "1");
		} else {
			ClientMain.configMap.put("逐层拿牌", "0");
		}
		if (jCheckBox3.isSelected()) {
			ClientMain.configMap.put("换层后反向拿牌", "1");
		} else {
			ClientMain.configMap.put("换层后反向拿牌", "0");
		}
		if (jCheckBox4.isSelected()) {
			ClientMain.configMap.put("碰牌", "1");
		} else {
			ClientMain.configMap.put("碰牌", "0");
		}
		if (jCheckBox5.isSelected()) {
			ClientMain.configMap.put("字牌碰", "1");
		} else {
			ClientMain.configMap.put("字牌碰", "0");
		}
		if (jCheckBox6.isSelected()) {
			ClientMain.configMap.put("吃牌", "1");
		} else {
			ClientMain.configMap.put("吃牌", "0");
		}
		if (jCheckBox7.isSelected()) {
			ClientMain.configMap.put("字牌吃", "1");
		} else {
			ClientMain.configMap.put("字牌吃", "0");
		}
		if (jCheckBox8.isSelected()) {
			ClientMain.configMap.put("字牌分开", "1");
		} else {
			ClientMain.configMap.put("字牌分开", "0");
		}
		if (jCheckBox9.isSelected()) {
			ClientMain.configMap.put("吃三方牌", "1");
		} else {
			ClientMain.configMap.put("吃三方牌", "0");
		}
		if (jCheckBox10.isSelected()) {
			ClientMain.configMap.put("补将", "1");
		} else {
			ClientMain.configMap.put("补将", "0");
		}
		if (jCheckBox11.isSelected()) {
			ClientMain.configMap.put("花牌可碰", "1");
		} else {
			ClientMain.configMap.put("花牌可碰", "0");
		}
		if (jCheckBox12.isSelected()) {
			ClientMain.configMap.put("只自摸", "1");
		} else {
			ClientMain.configMap.put("只自摸", "0");
		}
		if (jCheckBox13.isSelected()) {
			ClientMain.configMap.put("抢杠胡", "1");
		} else {
			ClientMain.configMap.put("抢杠胡", "0");
		}
		if (jCheckBox14.isSelected()) {
			ClientMain.configMap.put("血流成河", "1");
		} else {
			ClientMain.configMap.put("血流成河", "0");
		}
		if (jCheckBox15.isSelected()) {
			ClientMain.configMap.put("二五八将", "1");
		} else {
			ClientMain.configMap.put("二五八将", "0");
		}
		if (jCheckBox16.isSelected()) {
			ClientMain.configMap.put("缺一门", "1");
		} else {
			ClientMain.configMap.put("缺一门", "0");
		}
		if (jCheckBox17.isSelected()) {
			ClientMain.configMap.put("七小对", "1");
		} else {
			ClientMain.configMap.put("七小对", "0");
		}
		if (jCheckBox18.isSelected()) {
			ClientMain.configMap.put("十三烂", "1");
		} else {
			ClientMain.configMap.put("十三烂", "0");
		}
		if (jCheckBox19.isSelected()) {
			ClientMain.configMap.put("幺九牌", "1");
		} else {
			ClientMain.configMap.put("幺九牌", "0");
		}
		if (jCheckBox20.isSelected()) {
			ClientMain.configMap.put("开口胡", "1");
		} else {
			ClientMain.configMap.put("开口胡", "0");
		}
		if (jCheckBox21.isSelected()) {
			ClientMain.configMap.put("血战到底", "1");
		} else {
			ClientMain.configMap.put("血战到底", "0");
		}
		if (jCheckBox22.isSelected()) {
			ClientMain.configMap.put("胡牌可碰", "1");
		} else {
			ClientMain.configMap.put("胡牌可碰", "0");
		}
		if (jCheckBox23.isSelected()) {
			ClientMain.configMap.put("单张可杠", "1");
		} else {
			ClientMain.configMap.put("单张可杠", "0");
		}
		if (jCheckBox24.isSelected()) {
			ClientMain.configMap.put("杠手中牌(以花牌形式杠)", "1");
		} else {
			ClientMain.configMap.put("杠手中牌(以花牌形式杠)", "0");
		}
		if (jCheckBox25.isSelected()) {
			ClientMain.configMap.put("明杠", "1");
		} else {
			ClientMain.configMap.put("明杠", "0");
		}
		if (jCheckBox26.isSelected()) {
			ClientMain.configMap.put("暗杠", "1");
		} else {
			ClientMain.configMap.put("暗杠", "0");
		}
		if (jCheckBox27.isSelected()) {
			ClientMain.configMap.put("字牌可杠", "1");
		} else {
			ClientMain.configMap.put("字牌可杠", "0");
		}
		if (jCheckBox28.isSelected()) {
			ClientMain.configMap.put("东南西北杠", "1");
		} else {
			ClientMain.configMap.put("东南西北杠", "0");
		}
		if (jCheckBox29.isSelected()) {
			ClientMain.configMap.put("幺九杠(三张不补，四张补)", "1");
		} else {
			ClientMain.configMap.put("幺九杠(三张不补，四张补)", "0");
		}
		if (jCheckBox30.isSelected()) {
			ClientMain.configMap.put("财神", "1");
		} else {
			ClientMain.configMap.put("财神", "0");
		}
		if (jRadioButton3.isSelected()) {
			ClientMain.configMap.put("顺摸财神", "1");
		} else {
			ClientMain.configMap.put("顺摸财神", "0");
		}
		if (jRadioButton4.isSelected()) {
			ClientMain.configMap.put("后财神", "1");
		} else {
			ClientMain.configMap.put("后财神", "0");
		}
		if (jRadioButton5.isSelected()) {
			ClientMain.configMap.put("色子定财神", "1");
		} else {
			ClientMain.configMap.put("色子定财神", "0");
		}
		if (jRadioButton6.isSelected()) {
			ClientMain.configMap.put("固定财神", "1");
		} else {
			ClientMain.configMap.put("固定财神", "0");
		}
		if (jRadioButton7.isSelected()) {
			ClientMain.configMap.put("升级财神", "1");
		} else {
			ClientMain.configMap.put("升级财神", "0");
		}
		if (jRadioButton8.isSelected()) {
			ClientMain.configMap.put("双财神", "1");
		} else {
			ClientMain.configMap.put("双财神", "0");
		}
		if (jCheckBox34.isSelected()) {
			ClientMain.configMap.put("财神是花牌继续升", "1");
		} else {
			ClientMain.configMap.put("财神是花牌继续升", "0");
		}
		if (jCheckBox35.isSelected()) {
			ClientMain.configMap.put("财神按正常牌参与吃碰杠(起飞)", "1");
		} else {
			ClientMain.configMap.put("财神按正常牌参与吃碰杠(起飞)", "0");
		}
		if (jCheckBox36.isSelected()) {
			ClientMain.configMap.put("交换牌", "1");
		} else {
			ClientMain.configMap.put("交换牌", "0");
		}
		if (jCheckBox37.isSelected()) {
			ClientMain.configMap.put("先杠花后定财神", "1");
		} else {
			ClientMain.configMap.put("先杠花后定财神", "0");
		}
		if (jCheckBox38.isSelected()) {
			ClientMain.configMap.put("可升级财神到花牌", "1");
		} else {
			ClientMain.configMap.put("可升级财神到花牌", "0");
		}
		if (jCheckBox39.isSelected()) {
			ClientMain.configMap.put("翻开财神是花牌继续翻", "1");
		} else {
			ClientMain.configMap.put("翻开财神是花牌继续翻", "0");
		}
		if (jCheckBox40.isSelected()) {
			ClientMain.configMap.put("财神可单杠", "1");
		} else {
			ClientMain.configMap.put("财神可单杠", "0");
		}
		if (jCheckBox41.isSelected()) {
			ClientMain.configMap.put("翻开的财神当花牌", "1");
		} else {
			ClientMain.configMap.put("翻开的财神当花牌", "0");
		}
		if (jCheckBox42.isSelected()) {
			ClientMain.configMap.put("财神置换", "1");
		} else {
			ClientMain.configMap.put("财神置换", "0");
		}
		if (jCheckBox43.isSelected()) {
			ClientMain.configMap.put("财神可抓", "1");
		} else {
			ClientMain.configMap.put("财神可抓", "0");
		}
		ClientMain.configMap.put("音量", String.valueOf(jSlider1.getValue()));
		ClientMain.configMap.put("东", String.valueOf(jSpinner1.getValue()));
		ClientMain.configMap.put("南", String.valueOf(jSpinner2.getValue()));
		ClientMain.configMap.put("西", String.valueOf(jSpinner3.getValue()));
		ClientMain.configMap.put("北", String.valueOf(jSpinner4.getValue()));
		if (jRadioButton1.isSelected()) {
			ClientMain.configMap.put("两层三层", "0");
		} else {
			ClientMain.configMap.put("两层三层", "1");
		}
		ClientMain.configMap.put("选牌", String.valueOf(jComboBox12.getSelectedItem()));
		ClientMain.configMap.put("玩家牌数", String.valueOf(jComboBox1.getSelectedItem()));
		ClientMain.configMap.put("玩家人数", String.valueOf(jComboBox2.getSelectedItem()));
		ClientMain.configMap.put("每手张数", String.valueOf(jComboBox3.getSelectedItem()));
		ClientMain.configMap.put("挑牌", String.valueOf(jComboBox4.getSelectedItem()));
		ClientMain.configMap.put("换手牌", String.valueOf(jComboBox5.getSelectedItem()));
		ClientMain.configMap.put("预测牌", String.valueOf(jComboBox6.getSelectedItem()));
		ClientMain.configMap.put("杠花", String.valueOf(jComboBox7.getSelectedItem()));
		ClientMain.configMap.put("杠牌顺序", String.valueOf(jComboBox8.getSelectedItem()));
		ClientMain.configMap.put("上下", String.valueOf(jComboBox9.getSelectedItem()));
		ClientMain.configMap.put("上上下下", String.valueOf(jComboBox10.getSelectedItem()));
		ClientMain.configMap.put("倒数第几栋第1张", String.valueOf(jComboBox11.getSelectedItem()));
		ClientMain.configMap.put("自选花牌", this.自选花牌);
		ClientMain.configMap.put("自选财神", this.自选财神);
		try {
			this.setConfigXml(ClientMain.configMap);
			ClientMain.updateConfigPara();
		} catch (DocumentException | IOException e) {
			e.printStackTrace();
		}
	}// GEN-LAST:event_formWindowClosed

	private void initData() {
		try {
			Map<String, String> configMap = ClientMain.configMap;
			this.自选花牌 = ClientMain.configMap.get("自选花牌");
			this.自选财神 = ClientMain.configMap.get("自选财神");
			String 开启震动 = getValue(configMap, "开启震动");
			if (开启震动.equals("1")) {
				jCheckBox44.setSelected(true);
			}
			String 开启语音 = getValue(configMap, "开启语音");
			if (开启语音.equals("1")) {
				jCheckBox45.setSelected(true);
			}
			String 上下拿牌 = getValue(configMap, "上下拿牌");
			if (上下拿牌.equals("1")) {
				jCheckBox1.setSelected(true);
			}
			String 逐层拿牌 = getValue(configMap, "逐层拿牌");
			if (逐层拿牌.equals("1")) {
				jCheckBox2.setSelected(true);
			}
			String 换层后反向拿牌 = getValue(configMap, "换层后反向拿牌");
			if (换层后反向拿牌.equals("1")) {
				jCheckBox3.setSelected(true);
			}
			String 碰牌 = getValue(configMap, "碰牌");
			if (碰牌.equals("1")) {
				jCheckBox4.setSelected(true);
			}
			String 字牌碰 = getValue(configMap, "字牌碰");
			if (字牌碰.equals("1")) {
				jCheckBox5.setSelected(true);
			}
			String 吃牌 = getValue(configMap, "吃牌");
			if (吃牌.equals("1")) {
				jCheckBox6.setSelected(true);
			}
			String 字牌吃 = getValue(configMap, "字牌吃");
			if (字牌吃.equals("1")) {
				jCheckBox7.setSelected(true);
			}
			String 字牌分开 = getValue(configMap, "字牌分开");
			if (字牌分开.equals("1")) {
				jCheckBox8.setSelected(true);
			}
			String 吃三方牌 = getValue(configMap, "吃三方牌");
			if (吃三方牌.equals("1")) {
				jCheckBox9.setSelected(true);
			}
			String 补将 = getValue(configMap, "补将");
			if (补将.equals("1")) {
				jCheckBox10.setSelected(true);
			}
			String 花牌可碰 = getValue(configMap, "花牌可碰");
			if (花牌可碰.equals("1")) {
				jCheckBox11.setSelected(true);
			}
			String 只自摸 = getValue(configMap, "只自摸");
			if (只自摸.equals("1")) {
				jCheckBox12.setSelected(true);
			}
			String 抢杠胡 = getValue(configMap, "抢杠胡");
			if (抢杠胡.equals("1")) {
				jCheckBox13.setSelected(true);
			}
			String 血流成河 = getValue(configMap, "血流成河");
			if (血流成河.equals("1")) {
				jCheckBox14.setSelected(true);
			}
			String 二五八将 = getValue(configMap, "二五八将");
			if (二五八将.equals("1")) {
				jCheckBox15.setSelected(true);
			}
			String 缺一门 = getValue(configMap, "缺一门");
			if (缺一门.equals("1")) {
				jCheckBox16.setSelected(true);
			}
			String 七小对 = getValue(configMap, "七小对");
			if (七小对.equals("1")) {
				jCheckBox17.setSelected(true);
			}
			String 十三烂 = getValue(configMap, "十三烂");
			if (十三烂.equals("1")) {
				jCheckBox18.setSelected(true);
			}
			String 幺九牌 = getValue(configMap, "幺九牌");
			if (幺九牌.equals("1")) {
				jCheckBox19.setSelected(true);
			}
			String 开口胡 = getValue(configMap, "开口胡");
			if (开口胡.equals("1")) {
				jCheckBox20.setSelected(true);
			}
			String 血战到底 = getValue(configMap, "血战到底");
			if (血战到底.equals("1")) {
				jCheckBox21.setSelected(true);
			}
			String 胡牌可碰 = getValue(configMap, "胡牌可碰");
			if (胡牌可碰.equals("1")) {
				jCheckBox22.setSelected(true);
			}
			String 单张可杠 = getValue(configMap, "单张可杠");
			if (单张可杠.equals("1")) {
				jCheckBox23.setSelected(true);
			}
			String 杠手中牌 = getValue(configMap, "杠手中牌(以花牌形式杠)");
			if (杠手中牌.equals("1")) {
				jCheckBox24.setSelected(true);
			}
			String 明杠 = getValue(configMap, "明杠");
			if (明杠.equals("1")) {
				jCheckBox25.setSelected(true);
			}
			String 暗杠 = getValue(configMap, "暗杠");
			if (暗杠.equals("1")) {
				jCheckBox26.setSelected(true);
			}
			String 字牌可杠 = getValue(configMap, "字牌可杠");
			if (字牌可杠.equals("1")) {
				jCheckBox27.setSelected(true);
			}
			String 东南西北杠 = getValue(configMap, "东南西北杠");
			if (东南西北杠.equals("1")) {
				jCheckBox28.setSelected(true);
			}
			String 幺九杠 = getValue(configMap, "幺九杠(三张不补，四张补)");
			if (幺九杠.equals("1")) {
				jCheckBox29.setSelected(true);
			}
			String 财神 = getValue(configMap, "财神");
			if (财神.equals("1")) {
				jCheckBox30.setSelected(true);
			} else {
				jCheckBox30.setSelected(false);
			}
			String 顺摸财神 = getValue(configMap, "顺摸财神");
			if (顺摸财神.equals("1")) {
				jRadioButton3.setSelected(true);
			} else {
				jRadioButton3.setSelected(false);
			}
			String 后财神 = getValue(configMap, "后财神");
			if (后财神.equals("1")) {
				jRadioButton4.setSelected(true);
			}
			String 色子定财神 = getValue(configMap, "色子定财神");
			if (色子定财神.equals("1")) {
				jRadioButton5.setSelected(true);
			}
			String 固定财神 = getValue(configMap, "固定财神");
			if (固定财神.equals("1")) {
				jRadioButton6.setSelected(true);
				jButton3.setEnabled(true);
			}
			String 升级财神 = getValue(configMap, "升级财神");
			if (升级财神.equals("1")) {
				jRadioButton7.setSelected(true);
			} else {
				jRadioButton7.setSelected(false);
			}
			String 双财神 = getValue(configMap, "双财神");
			if (双财神.equals("1")) {
				jRadioButton8.setSelected(true);
			}
			String 财神是花牌继续升 = getValue(configMap, "财神是花牌继续升");
			if (财神是花牌继续升.equals("1")) {
				jCheckBox34.setSelected(true);
			}
			String 财神按正常牌参与吃碰杠 = getValue(configMap, "财神按正常牌参与吃碰杠(起飞)");
			if (财神按正常牌参与吃碰杠.equals("1")) {
				jCheckBox35.setSelected(true);
			}
			String 交换牌 = getValue(configMap, "交换牌");
			if (交换牌.equals("1")) {
				jCheckBox36.setSelected(true);
			}
			String 先杠花后定财神 = getValue(configMap, "先杠花后定财神");
			if (先杠花后定财神.equals("1")) {
				jCheckBox37.setSelected(true);
			}
			String 可升级财神到花牌 = getValue(configMap, "可升级财神到花牌");
			if (可升级财神到花牌.equals("1")) {
				jCheckBox38.setSelected(true);
			}
			String 翻开财神是花牌继续翻 = getValue(configMap, "翻开财神是花牌继续翻");
			if (翻开财神是花牌继续翻.equals("1")) {
				jCheckBox39.setSelected(true);
			}
			String 财神可单杠 = getValue(configMap, "财神可单杠");
			if (财神可单杠.equals("1")) {
				jCheckBox40.setSelected(true);
			}
			String 翻开的财神当花牌 = getValue(configMap, "翻开的财神当花牌");
			if (翻开的财神当花牌.equals("1")) {
				jCheckBox41.setSelected(true);
			}
			String 财神置换 = getValue(configMap, "财神置换");
			if (财神置换.equals("1")) {
				jCheckBox42.setSelected(true);
			}
			String 财神可抓 = getValue(configMap, "财神可抓");
			if (财神可抓.equals("1")) {
				jCheckBox43.setSelected(true);
			}
			String 音量 = getValue(configMap, "音量");
			jSlider1.setValue(Integer.parseInt(音量));
			String 东 = getValue(configMap, "东");
			jSpinner1.setValue(Integer.parseInt(东));
			String 南 = getValue(configMap, "南");
			jSpinner2.setValue(Integer.parseInt(南));
			String 西 = getValue(configMap, "西");
			jSpinner3.setValue(Integer.parseInt(西));
			String 北 = getValue(configMap, "北");
			jSpinner4.setValue(Integer.parseInt(北));
			String 两层三层 = getValue(configMap, "两层三层");
			if (两层三层.equals("1")) {
				jRadioButton2.setSelected(false);
				jRadioButton2.setSelected(true);
			}
			jComboBox12.setSelectedItem(getValue(configMap, "选牌"));
			jComboBox1.setSelectedItem(getValue(configMap, "玩家牌数"));
			jComboBox2.setSelectedItem(getValue(configMap, "玩家人数"));
			jComboBox3.setSelectedItem(getValue(configMap, "每手张数"));
			jComboBox4.setSelectedItem(getValue(configMap, "挑牌"));
			jComboBox5.setSelectedItem(getValue(configMap, "换手牌"));
			jComboBox6.setSelectedItem(getValue(configMap, "预测牌"));
			jComboBox7.setSelectedItem(getValue(configMap, "杠花"));
			jComboBox8.setSelectedItem(getValue(configMap, "杠牌顺序"));
			jComboBox9.setSelectedItem(getValue(configMap, "上下"));
			jComboBox10.setSelectedItem(getValue(configMap, "上上下下"));
			jComboBox11.setSelectedItem(getValue(configMap, "倒数第几栋第1张"));
			
			jCheckBox30ActionPerformed(null);
			jCheckBox45ActionPerformed(null);
			jRadioButton3ActionPerformed(null);
			jRadioButton4ActionPerformed(null);
			jRadioButton5ActionPerformed(null);
			jRadioButton6ActionPerformed(null);
			jRadioButton7ActionPerformed(null);
			jRadioButton8ActionPerformed(null);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static Map<String, String> getConfigXml() {
		Map<String, String> map = new HashMap<>();
		try {
			File f = new File("./conf/config.xml");
			SAXReader reader = new SAXReader();
			Document doc = reader.read(f);
			Element root = doc.getRootElement();
			List<Element> elements = root.elements();
			for (Element e : elements) {
				map.put(e.attribute("key").getValue(), e.attribute("value").getValue());
			}
		} catch (Exception e) {
			e.printStackTrace();
			return map;
		}
		return map;
	}

	public void setConfigXml(Map<String, String> map) throws DocumentException, IOException {
		if (map == null) {
			return;
		}
		Document doc = DocumentHelper.createDocument();
		Element root = doc.addElement("root");
		for (Entry<String, String> entry : map.entrySet()) {
			Element element = root.addElement("param");
			element.addAttribute("key", entry.getKey());
			element.addAttribute("value", entry.getValue());
		}

		FileOutputStream out = new FileOutputStream("./conf/config.xml");

		// 指定文本的写出的格式：
		OutputFormat format = OutputFormat.createPrettyPrint();
		format.setEncoding("UTF-8");
		XMLWriter writer = new XMLWriter(out, format);
		writer.write(doc);
		writer.close();
	}

	private String getValue(Map<String, String> map, String key) {
		if (map == null || key == null) {
			return "";
		}
		String value = map.get(key);
		if (value == null) {
			return "";
		}
		return value;
	}
	
	public void setXuanPai(String value, int type) {
		if (type == 1) {
			this.自选花牌 = value;
		} else {
			this.自选财神 = value;
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox34;
    private javax.swing.JCheckBox jCheckBox35;
    private javax.swing.JCheckBox jCheckBox36;
    private javax.swing.JCheckBox jCheckBox37;
    private javax.swing.JCheckBox jCheckBox38;
    private javax.swing.JCheckBox jCheckBox39;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox40;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JCheckBox jCheckBox43;
    private javax.swing.JCheckBox jCheckBox44;
    private javax.swing.JCheckBox jCheckBox45;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    // End of variables declaration//GEN-END:variables
}
